<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAN9SURBVFhH7ZfJT1NBHMe5+Afokcw/4NGD4aDGeDAmGkUB
        YxQFihRQWVpbShcKshQoRUCJGkUxbog7riAiAi6gokGIMTGGhGBwjVv04uXn+844kweOS/Mw8eAv+dz6
        Pp958/qmacz/+T//2sxIyfP05RVVkKO48gc6bw/+Ma2XrtG22kZ1LZxwoyFS+pmVGyinQHgHBSONnNW2
        LMp2+zmDT0Z/S8/9Ybrc00+XbtyhUmMB0gMn3GiIlH5i84MhdVE0CxgYeUpXegcoKTWTsrb66HzXTSoO
        N1BDc4tywY2GSOmHYauKanYqktIMocvH0YUBwrjri9231QJ6B0coULmd6g8cUy640RAp/TD5CCSJhjDT
        EIKpYfN2X7h+i9qu9akFdN8dIl9FhOr2H1Wu74/g1wvI8ZeRv7pBkZBiJ7vTy5Fhud0yjO0+19lLZzpu
        qAV09T8kT2k1bW86olxwoyFS+mFbfKXkq6pXJGzIILujkIO4ebsRxl2fvdpDp9u76dSV62oBeBPcJZVU
        u++wcsGNhkjph232biNvZZ1i1fqNlJHv4UzdbnnXCJ+83EWtFzvVAjpu3iNXcYgiew8pF9xoiJR+WLan
        mDwVtYr4ZBul57k5U7cbd43wCeOdP37hKrWc76Bjbe3U3neX75SzqJzCew4qF9xoiJR+WFZBkArKI4oV
        62xky3VzSmqM86G6nn+7/aFa8pbXUGFZmD9rbDfueGuwgocl1bublQtuNERKPyzTXUTusppJVO06YAnp
        gRsNkdIPs7sC5CoN/xXgRkOk9MM2On3kLKn6K8CNhkjph6U7vJN+gKYTuNEQKf0wm/G65RtfJMmbj18s
        YXbBjYZI6Yel5hbwI1Py+sNnS5hdcKMhUvphKTlufmRKXr77xOkfehwV8jqzC240REo/bMMWFz8yJRNv
        3lvC7IIbDZHSD0ve5KRNhSWK8VdvObcGH0WFvM7sghsNkdIPW5ft4EemZGzitSXMLrjRECn9sLVZ+fzI
        lIyOv+D0DDyICnmd2QU3GiKlH5aW5+FHpuTZ2HNLmF1woyFS+uEnYaixSfGVyBJm1x+dhHMWLqFF8Wto
        cWIy52DLWUtID5xwoyFS+omdPXfecNzi5TR/aQItWJZIOU6PJeCAC0640RAp/cw0iDNYaZA0zcAJNxo/
        HfxrwQewSmzVdAIn3KZ/RjEx3wCItsdMEwQ18QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="tsClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>